# From: https://github.com/commercialhaskell/stack/blob/2058c06710e10365e78fefdeb01e91cd0bb7a606/doc/travis-complex.yml

# Use new container infrastructure to enable caching
sudo: false

# Do not choose a language; we provide our own build tools.
language: generic

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/.stack-work

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:
  # We grab the appropriate GHC and cabal-install versions from hvr's PPA. See:
  # https://github.com/hvr/multi-ghc-travis
  - env: BUILD=cabal GHCVER=8.0.2 CABALVER=1.24 HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: "GHC 8.0.2"
    addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=8.2.2 CABALVER=2.0 HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: "GHC 8.2.2"
    addons: {apt: {packages: [cabal-install-2.0,ghc-8.2.2,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=8.4.4 CABALVER=2.2 HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: "GHC 8.4.4"
    addons: {apt: {packages: [cabal-install-2.2,ghc-8.4.4,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}


  # Build with the newest GHC and cabal-install. This is an accepted failure,
  # see below.
  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: "GHC HEAD"
    addons: {apt: {packages: [cabal-install-head,ghc-head,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  - env: BUILD=stack ARGS=""
    compiler: "stack default"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-11"
    compiler: "stack lts-11"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-12"
    compiler: "stack lts-12"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-13"
    compiler: "stack lts-13"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: "stack nightly"
    addons: {apt: {packages: [libgmp-dev]}}

  # Nightly builds are allowed to fail
  allow_failures:
  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7
  - env: BUILD=stack ARGS="--resolver nightly"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

# Download and unpack the stack executable
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config


install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  set -ex
  case "$BUILD" in
    stack)
      # Add in extra-deps for older snapshots, as necessary
      #
      # This is disabled by default, as relying on the solver like this can
      # make builds unreliable. Instead, if you have this situation, it's
      # recommended that you maintain multiple stack-lts-X.yaml files.

      #stack --no-terminal --install-ghc $ARGS test --bench --dry-run || ( \
      #  stack --no-terminal $ARGS build cabal-install && \
      #  stack --no-terminal $ARGS solver --update-config)

      # Build the dependencies
      stack --no-docker --no-terminal --install-ghc $ARGS test --bench --only-dependencies
      ;;
    cabal)
      cabal --version
      travis_retry cabal update

      # Get the list of packages from the stack.yaml file. Note that
      # this will also implicitly run hpack as necessary to generate
      # the .cabal files needed by cabal-install.
      PACKAGES=$(stack --no-docker --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      ;;
  esac
  set +ex

script:
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-docker --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
      ;;
    cabal)
      cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES

      ORIGDIR=$(pwd)
      for dir in $PACKAGES
      do
        cd $dir
        cabal check || [ "$CABALVER" == "1.16" ]
        cabal sdist
        PKGVER=$(cabal info . | awk '{print $2;exit}')
        SRC_TGZ=$PKGVER.tar.gz
        cd dist
        tar zxfv "$SRC_TGZ"
        cd "$PKGVER"
        cabal configure --enable-tests --ghc-options -O0
        cabal build
        if [ "$CABALVER" = "1.16" ] || [ "$CABALVER" = "1.18" ]; then
          cabal test
        else
          cabal test --show-details=streaming --log=/dev/stdout
        fi
        cd $ORIGDIR
      done
      ;;
  esac
  set +ex

deploy:
  - provider: script
    skip_cleanup: true
    script: bash .travis/deploy.sh
    on:
      repo: Nike-inc/hal
      tags: true

# https://docs.travis-ci.com/user/environment-variables/#defining-encrypted-variables-in-travisyml
env:
  global:
  - secure: x5EeGizWOHUphvmAcV6UFM/8LrdvK2ZStuUPZ5b3i2a4CbP+DbaxY5+NjbbTptpXxic6w2vA72kmnypCnUEjQjWO5OrgGj/JvP0gKcOeHL6Qxnqdg560hBiHXliDpo44RDYEvvfftlWR8r8UA1mexPsLklyzn4TXIDG4dkRI5SZZ330FmQxCGDViZKUiBbdA4RUxdora8jbIqcU5rMA8YM/ZGPsuWDqvdKkGsgSpwWP303bFCvihaTPBWRISBt7UpU5iK8zYqIUiMMsgX0LvIePnCzUt9FpRU7WE0k3A8xk+NnJkNdW7Vnw87187rXA0EYtWHEIcAe8znNovcCmzWZfO0yYxu0C1LGk0hl4NcGora32ZDASMyp2lUUoyHA9cS8qrE5JEyNEwI+cU22QJZdzs1xtw5QkpL05LMeRrEWS8vzOqEVda4mKT6C0k6BgiHg81lgrVMPf5wwIz0vclMCivgVhqDGW2fugBcRAlPySoed7lkuf5qENPh5ioULjmnmcyOdTvqx7RXBBHuLwHQ2+y6WLCb4KBMyvIntA9/Iv0EjHxvzQDNDYkHDLzHg7JWMPlEZiPjLvZdhlW+36j50pon6uzCtHNQMookimCHx9+Ydyzfs41z81PR5LaFrNluunQFR8mK8Dh6dGTUkR88kD6GFuDsbj7spWAbyIzICY=
  - secure: qvsPUHaytIZmStv5465ndoaCWqc0nXSPg2xYX132GjAdxyxEqfP/lMvubnqPJPNae44OJLJegUCZdm+S1w9tA9IrLPzFd8C2F76SkzU5GdiWXoeDloInOvdNu9YPzccUl1eUoCDBPQsgLn3gKq2qWPEfQ88puAQ/HTZYWES9SdMp46nVLQnlXkVSuGvz5r2j2F4DuiyvcrBuRsv2kCUXHztOGA4PoQhPh3yqT4l4js7imbFdN8BLDPQhvwTdgNmwgDS/WYTKGxN3fAPibd3b1ssg+bI7qAPl6sIuXIn2j/yJB2GPsSbsDt8s5/Zu48RCSQF15PvdvZRfnebl7Zgv/vDyfg2qbrulesPexAZZL5ujR6XKfFfK2yYbB41kiCuBk2MSnC17fOWxs2uFf72KOh5vq8fbCTQsvz8q3UyO1CuLL/U2bwaHemRjPfYX9HCoSQyXoSXQ/55ddhbkRqur7Io4/0qSUzL/GcxQg5AR5X6uS+7HXmL1b/Q78hA0/cevKkTWFcw7eFDyzP4UAP+oGON0i/zHHsEn+MKzLhbJ/gBaGv2aYCBKrgHYZlbrld0638Itc3G2eczB/ogamsPuHw4ZYJV3ASQwSehPOCEeH6neX0QjQh74ijTW+QsmXCY8i12p6iIQGhupCvUPrloBPOBpNNS5mjc4i3O4I6oAIvk=
